plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'idea'
apply plugin: 'java'

group 'com.bordercloud'
version '1.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    //compile 'org.apache.httpcomponents:httpasyncclient:4.1.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.2'

// https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.13.2'

// https://mvnrepository.com/artifact/commons-io/commons-io
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
}

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'SPARQL-JAVA'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'SPARQL-JAVA'
                description = 'Client SPARQL 1.1 (very simple) for Java.'
                url = 'http://www.example.com/library'
                licenses {
                    license {
                        name = 'Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)'
                        url = 'https://creativecommons.org/licenses/by-sa/4.0/'
                    }
                }
                developers {
                    developer {
                        id = 'bordercloud'
                        name = 'Karima Rafes'
                        email = 'karima.rafes@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/BorderCloud/SPARQL-JAVA'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}